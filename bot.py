import telebot
from telebot import types
from datetime import datetime
import config
import dbworker
import auth
import exchange_rates_rss


TOKEN = auth.TOKEN
language = ""
amount = 0
currency_from = ""
currency_to = ""

ex = exchange_rates_rss.exchange_rates()
bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=["start"])
def welcome(message):
    welcome_msg = f"–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}!\n–ö–∞–∫–æ–π —è–∑—ã–∫ –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?"

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üáπüáØ Tajik")
    item2 = types.KeyboardButton("üá∑üá∫ Russian")
    item3 = types.KeyboardButton("üá¨üáß English")
    markup.add(item1)
    markup.add(item2)
    markup.add(item3)

    bot.send_message(message.chat.id, welcome_msg, parse_mode = "html", reply_markup=markup)
    dbworker.set_state(message.chat.id, config.States.LANGUAGE.value)

@bot.message_handler(content_types=['text'], func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.LANGUAGE.value)
def get_language(message):
    global language
    if message.text[3:] == "Tajik":
        language = message.text[3:]

        #Keyboard inline - tajik
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("–ö”Ø–º–∞–∫ –±–æ “õ–∞—Ä–∑")
        item2 = types.KeyboardButton("–ú—É–±–æ–¥–∏–ª–∞–∏ –∞—Å—ä–æ—Ä")
        item3 = types.KeyboardButton("–ë–æ–∑–≥–∞—à—Ç")
        markup.add(item1)
        markup.add(item2)
        markup.add(item3)

        bot.send_message(message.chat.id, "–ú–∞–Ω –±–∞ –∫–æ—Ä —Ç–∞—ë—Ä–∞–º!\n–ú–∞–Ω —á”£ —Ç–∞–≤—Ä –±–∞ —à—É–º–æ –∫”Ø–º–∞–∫ —Ä–∞—Å–æ–Ω–∞–º?", parse_mode="html", reply_markup=markup)
        dbworker.set_state(message.chat.id, config.States.ACTION.value)
    elif message.text[3:] == "Russian":
        language = message.text[3:]
        
        #Keyboard inline - russian
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("–ü–æ–º–æ—â—å —Å –∫—Ä–µ–¥–∏—Ç–æ–º")
        item2 = types.KeyboardButton("–ö—É—Ä—Å –≤–∞–ª—é—Ç")
        item3 = types.KeyboardButton("–ù–∞–∑–∞–¥")
        markup.add(item1)
        markup.add(item2)
        markup.add(item3)

        bot.send_message(message.chat.id, "–Ø –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!\n–ß–µ–º –º–æ–≥—É —è –≤–∞–º –ø–æ–º–æ—á—å?", parse_mode="html", reply_markup=markup)
        dbworker.set_state(message.chat.id, config.States.ACTION.value)
    elif message.text[3:] == "English":
        language = message.text[3:]

        #Keyboard inline - english
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("Help with a loan")
        item2 = types.KeyboardButton("Exchange Rates")
        item3 = types.KeyboardButton("Back")
        markup.add(item1)
        markup.add(item2)
        markup.add(item3)

        bot.send_message(message.chat.id, "I am ready to work!\nHow can i help you", parse_mode="html", reply_markup=markup)
        dbworker.set_state(message.chat.id, config.States.ACTION.value)
    else:
        if message.text[3:] == "Tajik":
            bot.send_message(message.chat.id, "–ú–∞–Ω –Ω–∞—Ñ–∞“≥–º–∏–¥–∞–º, –∫–∏ —à—É–º–æ —á”£ –¥–∞—Ä –Ω–∞–∑–∞—Ä –¥–æ—Ä–µ–¥!", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.LANGUAGE.value)
        elif message.text[3:] == "Russian":
            bot.send_message(message.chat.id, "–Ø –Ω–µ –ø–æ–Ω—è–ª, —á—Ç–æ –≤—ã –∏–º–µ–µ—Ç—É –≤ –≤–∏–¥—É!", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.LANGUAGE.value)
        elif message.text[3:] == "English":
            bot.send_message(message.chat.id, "I don't know what you mean!", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.LANGUAGE.value)
        else:
            bot.send_message(message.chat.id, "I don't know what you mean!", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.LANGUAGE.value)
    
@bot.message_handler(content_types=['text'], func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.ACTION.value)
def get_start(message):
    global language
    with open('log.txt', 'a', encoding="utf-8") as file:
        file.write(f"{language}, {message.text}")

    if language == "Tajik":
        if message.text == "–ö”Ø–º–∞–∫ –±–æ “õ–∞—Ä–∑":
            bot.send_message(message.chat.id, "–ò–Ω “õ–∏—Å–º “≥–∞–Ω”Ø–∑ –¥–∞—Ä —Ç–∞“≥–∏—è –∞—Å—Ç", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.ACTION.value)
        elif message.text == "–ú—É–±–æ–¥–∏–ª–∞–∏ –∞—Å—ä–æ—Ä":
            bot.send_message(message.chat.id, "–ö–∞–¥–æ–º –∞—Å—ä–æ—Ä—Ä–æ –∏–≤–∞–∑ –∫–∞—Ä–¥–∞–Ω –º–µ—Ö–æ“≥–µ–¥?\n–ú–∞—Å–∞–ª–∞–Ω: USD, RUB, KGS", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_FROM.value)
        elif message.text == "–ë–æ–∑–≥–∞—à—Ç":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("üáπüáØ Tajik")
            item2 = types.KeyboardButton("üá∑üá∫ Russian")
            item3 = types.KeyboardButton("üá¨üáß English")
            markup.add(item1)
            markup.add(item2)
            markup.add(item3)
            bot.send_message(message.chat.id, "–®—É–º–æ –±–∞ –∫–∞–¥–æ–º –∑–∞–±–æ–Ω –±–∞—Ä—Ç–∞—Ä”£ –º–µ–¥–∏“≥–µ–¥?", parse_mode="html", reply_markup=markup)
            dbworker.set_state(message.chat.id, config.States.LANGUAGE.value)
        else:
            bot.send_message(message.chat.id, "–ú–∞–Ω —à—É–º–æ—Ä–æ –Ω–∞–º–µ—Ñ–∞“≥–º–∞–º, –ª—É—Ç—Ñ–∞–Ω —Ç–∞–∫—Ä–æ—Ä –∫—É–Ω–µ–¥!", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.ACTION.value)
            

    elif language == "Russian":
        if message.text == "–ü–æ–º–æ—â—å —Å –∫—Ä–µ–¥–∏—Ç–æ–º":
            bot.send_message(message.chat.id, "–≠—Ç–∞ —á–∞—Å—Ç—å –ø–æ–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.ACTION.value)
        elif message.text == "–ö—É—Ä—Å –≤–∞–ª—é—Ç":
            bot.send_message(message.chat.id, "–ö–∞–∫—É—é –≤–∞–ª—é—Ç—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å?\n–ù–∞–ø—Ä–∏–º–µ—Ä: USD, RUB, KGS", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_FROM.value)
        elif message.text == "–ù–∞–∑–∞–¥":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("üáπüáØ Tajik")
            item2 = types.KeyboardButton("üá∑üá∫ Russian")
            item3 = types.KeyboardButton("üá¨üáß English")
            markup.add(item1)
            markup.add(item2)
            markup.add(item3)
            bot.send_message(message.chat.id, "–ö–∞–∫–æ–π —è–∑—ã–∫ –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?", reply_markup=markup)
            dbworker.set_state(message.chat.id, config.States.LANGUAGE.value)
        else:
            bot.send_message(message.chat.id, "–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ!", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.ACTION.value)
    
    elif language == "English":
        if message.text == "Help with a loan":
            bot.send_message(message.chat.id, "This part is still in development", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.ACTION.value)
        elif message.text == "Exchange Rates":
            bot.send_message(message.chat.id, "What currency do you want to change?\nFor example: USD, RUB, KGS", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_FROM.value)
        elif message.text == "Back":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("üáπüáØ Tajik")
            item2 = types.KeyboardButton("üá∑üá∫ Russian")
            item3 = types.KeyboardButton("üá¨üáß English")
            markup.add(item1)
            markup.add(item2)
            markup.add(item3)
            bot.send_message(message.chat.id, "What language do you prefer?", reply_markup=markup)
            dbworker.set_state(message.chat.id, config.States.LANGUAGE.value)
        else:
            bot.send_message(message.chat.id, "I don't understand you, please repeat!", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.ACTION.value)

@bot.message_handler(content_types=['text'], func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.CURRENCY_FROM.value)
def get_currency_from(message):
    global currency_from, language
    if message.text.upper() in ex['NAMES_OTHER']: 
        currency_from = message.text.upper()
        if language == 'Tajik':
            bot.send_message(message.chat.id, "–®—É–º–æ –±–∞ –∫–∞–¥–æ–º –∞—Å—ä–æ—Ä –∏–≤–∞–∑ –∫–∞—Ä–¥–∞–Ω –º–µ—Ö–æ“≥–µ–¥?\n–ú–∞—Å–∞–ª–∞–Ω: USD, RUB, KGS", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_TO.value)
        elif language == 'Russian':
            bot.send_message(message.chat.id, "–ù–∞ –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å?\n–ù–∞–ø—Ä–∏–º–µ—Ä: USD, RUB, KGS", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_TO.value)
        else:
            bot.send_message(message.chat.id, "To what currency do you want to change?\nFor example: USD, RUB, KGS", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_TO.value)
    else:
        if language == 'Tajik':
            bot.send_message(message.chat.id, "–õ—É—Ç—Ñ–∞–Ω –∞—Å—ä–æ—Ä–∏ –¥—É—Ä—É—Å—Ç—Ä–æ –≤–æ—Ä–∏–¥ –∫—É–Ω–µ–¥!", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_FROM.value)
        elif language == 'Russian':
            bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –≤–∞–ª—é—Ç—É!", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_FROM.value)
        else:
            bot.send_message(message.chat.id, "Please enter the correct currency!", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_FROM.value)

@bot.message_handler(content_types=['text'], func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.CURRENCY_TO.value)
def get_currency_to(message):
    global currency_to, language
    if message.text.upper() in ex['NAMES_OTHER']:
        currency_to = message.text.upper()
        if language == 'Tajik':
            bot.send_message(message.chat.id, f"–®—É–º–æ —á–∞–Ω–¥ {currency_from} –º–µ—Ö–æ“≥–µ–¥ –∏–≤–∞–∑ –∫—É–Ω–µ–¥?", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_AMOUNT.value)
        elif language == 'Russian':
            bot.send_message(message.chat.id, f"–°–∫–æ–ª—å–∫–æ {currency_from} –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å?", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_AMOUNT.value)
        else:
            bot.send_message(message.chat.id, f"How many {currency_from} do you want to change?", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_AMOUNT.value)
    else:
        if language == 'Tajik':
            bot.send_message(message.chat.id, "–õ—É—Ç—Ñ–∞–Ω –∞—Å—ä–æ—Ä–∏ –¥—É—Ä—É—Å—Ç—Ä–æ –≤–æ—Ä–∏–¥ –∫—É–Ω–µ–¥!", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_TO.value)
        elif language == 'Russian':
            bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –≤–∞–ª—é—Ç—É!", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_TO.value)
        else:
            bot.send_message(message.chat.id, "Please enter the correct currency!", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_TO.value)

@bot.message_handler(content_types=['text'], func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.CURRENCY_AMOUNT.value)
def get_currency_amount(message):
    global amount, currency_from, currency_to, language
    if message.text.isnumeric():
        amount = float(message.text)
        i1 = ex['NAMES_OTHER'].index(currency_from)
        i2 = ex['NAMES_OTHER'].index(currency_to)
        val = amount * (float(ex['UNIT'][i2]) / float(ex['RATE'][i2])) / (float(ex['UNIT'][i1]) / float(ex['RATE'][i1]))
        
        if language == 'Tajik':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–ö”Ø–º–∞–∫ –±–æ “õ–∞—Ä–∑")
            item2 = types.KeyboardButton("–ú—É–±–æ–¥–∏–ª–∞–∏ –∞—Å—ä–æ—Ä")
            item3 = types.KeyboardButton("–ë–æ–∑–≥–∞—à—Ç")
            markup.add(item1)
            markup.add(item2)
            markup.add(item3)

            bot.send_message(message.chat.id, f"–ë–æ {amount}{currency_from} —à—É–º–æ {round(val, 2)}{currency_to} –º–µ–≥–∏—Ä–µ–¥", parse_mode="html", reply_markup=markup)
            dbworker.set_state(message.chat.id, config.States.ACTION.value)
        elif language == 'Russian':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–ü–æ–º–æ—â—å —Å –∫—Ä–µ–¥–∏—Ç–æ–º")
            item2 = types.KeyboardButton("–ö—É—Ä—Å –≤–∞–ª—é—Ç")
            item3 = types.KeyboardButton("–ù–∞–∑–∞–¥")
            markup.add(item1)
            markup.add(item2)
            markup.add(item3)

            bot.send_message(message.chat.id, f"–ó–∞ {amount}{currency_from} –≤—ã –ø–æ–ª—É—á–∏—Ç–µ {round(val, 2)}{currency_to}", parse_mode="html", reply_markup=markup)
            dbworker.set_state(message.chat.id, config.States.ACTION.value)
        else:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("Help with a loan")
            item2 = types.KeyboardButton("Exchange Rates")
            item3 = types.KeyboardButton("Back")
            markup.add(item1)
            markup.add(item2)
            markup.add(item3)

            bot.send_message(message.chat.id, f"For {amount}{currency_from} you will get {round(val, 2)}{currency_to}", parse_mode="html", reply_markup=markup)
            dbworker.set_state(message.chat.id, config.States.ACTION.value)
        
    else:
        if language == 'Tajik':
            bot.send_message(message.chat.id, "–õ—É—Ç—Ñ–∞–Ω —Ä–∞“õ–∞–º –≤–æ—Ä–∏–¥ –∫—É–Ω–µ–¥!")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_AMOUNT.value)
        elif language == 'Russian':
            bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—ã!")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_AMOUNT.value)
        else:
            bot.send_message(message.chat.id, "Please enter numbers!")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_AMOUNT.value)

bot.polling(none_stop=True, interval=0)