
import telebot
from telebot import types
from datetime import datetime
import config
import dbworker
import auth
import exchange_rates_rss
from helpers import *


TOKEN = auth.TOKEN
language = ""
amount = 0
currency_from = ""
currency_to = ""
loan_user = []

ex = exchange_rates_rss.exchange_rates()
bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=["start"])
def welcome(message):
    welcome_msg = f"–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}!\n–ö–∞–∫–æ–π —è–∑—ã–∫ –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?"

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üáπüáØ Tajik")
    item2 = types.KeyboardButton("üá∑üá∫ Russian")
    item3 = types.KeyboardButton("üá¨üáß English")
    markup.add(item1)
    markup.add(item2)
    markup.add(item3)

    bot.send_message(message.chat.id, welcome_msg, parse_mode = "html", reply_markup=markup)
    dbworker.set_state(message.chat.id, config.States.LANGUAGE.value)

@bot.message_handler(content_types=['text'], func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.LANGUAGE.value)
def get_language(message):
    global language
    if message.text[3:] == "Tajik":
        language = message.text[3:]

        #Keyboard inline - tajik
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("–ö”Ø–º–∞–∫ –±–æ “õ–∞—Ä–∑")
        item2 = types.KeyboardButton("–ú—É–±–æ–¥–∏–ª–∞–∏ –∞—Å—ä–æ—Ä")
        item3 = types.KeyboardButton("–ë–æ–∑–≥–∞—à—Ç")
        markup.add(item1)
        markup.add(item2)
        markup.add(item3)

        bot.send_message(message.chat.id, "–ú–∞–Ω –±–∞ –∫–æ—Ä —Ç–∞—ë—Ä–∞–º!\n–ú–∞–Ω —á”£ —Ç–∞–≤—Ä –±–∞ —à—É–º–æ –∫”Ø–º–∞–∫ —Ä–∞—Å–æ–Ω–∞–º?", parse_mode="html", reply_markup=markup)
        dbworker.set_state(message.chat.id, config.States.ACTION.value)
    elif message.text[3:] == "Russian":
        language = message.text[3:]
        
        #Keyboard inline - russian
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("–ü–æ–º–æ—â—å —Å –∫—Ä–µ–¥–∏—Ç–æ–º")
        item2 = types.KeyboardButton("–ö—É—Ä—Å –≤–∞–ª—é—Ç")
        item3 = types.KeyboardButton("–ù–∞–∑–∞–¥")
        markup.add(item1)
        markup.add(item2)
        markup.add(item3)

        bot.send_message(message.chat.id, "–Ø –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!\n–ß–µ–º –º–æ–≥—É —è –≤–∞–º –ø–æ–º–æ—á—å?", parse_mode="html", reply_markup=markup)
        dbworker.set_state(message.chat.id, config.States.ACTION.value)
    elif message.text[3:] == "English":
        language = message.text[3:]

        #Keyboard inline - english
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("Help with a loan")
        item2 = types.KeyboardButton("Exchange Rates")
        item3 = types.KeyboardButton("Back")
        markup.add(item1)
        markup.add(item2)
        markup.add(item3)

        bot.send_message(message.chat.id, "I am ready to work!\nHow can i help you", parse_mode="html", reply_markup=markup)
        dbworker.set_state(message.chat.id, config.States.ACTION.value)
    else:
        if message.text[3:] == "Tajik":
            bot.send_message(message.chat.id, "–ú–∞–Ω –Ω–∞—Ñ–∞“≥–º–∏–¥–∞–º, –∫–∏ —à—É–º–æ —á”£ –¥–∞—Ä –Ω–∞–∑–∞—Ä –¥–æ—Ä–µ–¥!", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.LANGUAGE.value)
        elif message.text[3:] == "Russian":
            bot.send_message(message.chat.id, "–Ø –Ω–µ –ø–æ–Ω—è–ª, —á—Ç–æ –≤—ã –∏–º–µ–µ—Ç—É –≤ –≤–∏–¥—É!", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.LANGUAGE.value)
        elif message.text[3:] == "English":
            bot.send_message(message.chat.id, "I don't know what you mean!", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.LANGUAGE.value)
        else:
            bot.send_message(message.chat.id, "I don't know what you mean!", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.LANGUAGE.value)
    
@bot.message_handler(content_types=['text'], func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.ACTION.value)
def get_start(message):
    """Action State"""
    global language
    with open('log.txt', 'a', encoding="utf-8") as file:
        file.write(f"{language}, {message.text}")

    if language == "Tajik":
        if message.text == "–ö”Ø–º–∞–∫ –±–æ “õ–∞—Ä–∑":           
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("“ö–∞—Ä–∑–∏ –∏—Å—Ç–µ—ä–º–æ–ª”£")
            item2 = types.KeyboardButton("“ö–∞—Ä–∑–∏ –º–æ—à–∏–Ω")
            markup.add(item1)
            markup.add(item2)
            bot.send_message(message.chat.id, "–ë–æ –∫–∞–¥–æ–º –º–∞“õ—Å–∞–¥ —à—É–º–æ –º–µ—Ö–æ“≥–µ–¥ “õ–∞—Ä–∑ –≥–∏—Ä–µ–¥?", parse_mode="html", reply_markup=markup)
            dbworker.set_state(message.chat.id, config.States.LOAN_PURPOSE.value)
    
        elif message.text == "–ú—É–±–æ–¥–∏–ª–∞–∏ –∞—Å—ä–æ—Ä":
            bot.send_message(message.chat.id, "–ö–∞–¥–æ–º –∞—Å—ä–æ—Ä—Ä–æ –∏–≤–∞–∑ –∫–∞—Ä–¥–∞–Ω –º–µ—Ö–æ“≥–µ–¥?\n–ú–∞—Å–∞–ª–∞–Ω: USD, RUB, KGS", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_FROM.value)

        elif message.text == "–ë–æ–∑–≥–∞—à—Ç":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("üáπüáØ Tajik")
            item2 = types.KeyboardButton("üá∑üá∫ Russian")
            item3 = types.KeyboardButton("üá¨üáß English")
            markup.add(item1)
            markup.add(item2)
            markup.add(item3)

            bot.send_message(message.chat.id, "–®—É–º–æ –±–∞ –∫–∞–¥–æ–º –∑–∞–±–æ–Ω –±–∞—Ä—Ç–∞—Ä”£ –º–µ–¥–∏“≥–µ–¥?", parse_mode="html", reply_markup=markup)
            dbworker.set_state(message.chat.id, config.States.LANGUAGE.value)

        else:
            bot.send_message(message.chat.id, "–ú–∞–Ω —à—É–º–æ—Ä–æ –Ω–∞–º–µ—Ñ–∞“≥–º–∞–º, –ª—É—Ç—Ñ–∞–Ω —Ç–∞–∫—Ä–æ—Ä –∫—É–Ω–µ–¥!", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.ACTION.value)
            

    elif language == "Russian":
        if message.text == "–ü–æ–º–æ—â—å —Å –∫—Ä–µ–¥–∏—Ç–æ–º":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏–π –∫—Ä–µ–¥–∏—Ç")
            item2 = types.KeyboardButton("–ê–≤—Ç–æ–∫—Ä–µ–¥–∏—Ç")
            markup.add(item1)
            markup.add(item2)
            bot.send_message(message.chat.id, "C –∫–∞–∫–æ–π —Ü–µ–ª—å—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∑—è—Ç—å –≤ –∫—Ä–µ–¥–∏—Ç?", parse_mode="html", reply_markup=markup)
            dbworker.set_state(message.chat.id, config.States.LOAN_PURPOSE.value)

        elif message.text == "–ö—É—Ä—Å –≤–∞–ª—é—Ç":
            bot.send_message(message.chat.id, "–ö–∞–∫—É—é –≤–∞–ª—é—Ç—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å?\n–ù–∞–ø—Ä–∏–º–µ—Ä: USD, RUB, KGS", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_FROM.value)
        
        elif message.text == "–ù–∞–∑–∞–¥":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("üáπüáØ Tajik")
            item2 = types.KeyboardButton("üá∑üá∫ Russian")
            item3 = types.KeyboardButton("üá¨üáß English")
            markup.add(item1)
            markup.add(item2)
            markup.add(item3)

            bot.send_message(message.chat.id, "–ö–∞–∫–æ–π —è–∑—ã–∫ –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?", reply_markup=markup)
            dbworker.set_state(message.chat.id, config.States.LANGUAGE.value)
        else:
            bot.send_message(message.chat.id, "–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ!", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.ACTION.value)
    
    elif language == "English":
        if message.text == "Help with a loan":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("Consumer Loan")
            item2 = types.KeyboardButton("Car Loan")
            markup.add(item1)
            markup.add(item2)
            bot.send_message(message.chat.id, "For what purpose do you want to get loan?", parse_mode="html", reply_markup=markup)
            dbworker.set_state(message.chat.id, config.States.LOAN_PURPOSE.value)

        elif message.text == "Exchange Rates":
            bot.send_message(message.chat.id, "What currency do you want to change?\nFor example: USD, RUB, KGS", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_FROM.value)

        elif message.text == "Back":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("üáπüáØ Tajik")
            item2 = types.KeyboardButton("üá∑üá∫ Russian")
            item3 = types.KeyboardButton("üá¨üáß English")
            markup.add(item1)
            markup.add(item2)
            markup.add(item3)

            bot.send_message(message.chat.id, "What language do you prefer?", reply_markup=markup)
            dbworker.set_state(message.chat.id, config.States.LANGUAGE.value)

        else:
            bot.send_message(message.chat.id, "I don't understand you, please repeat!", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.ACTION.value)

@bot.message_handler(content_types=['text'], func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.CURRENCY_FROM.value)
def get_currency_from(message):
    global currency_from, language
    if message.text.upper() in ex['NAMES_OTHER']: 
        currency_from = message.text.upper()
        if language == 'Tajik':
            bot.send_message(message.chat.id, "–®—É–º–æ –±–∞ –∫–∞–¥–æ–º –∞—Å—ä–æ—Ä –∏–≤–∞–∑ –∫–∞—Ä–¥–∞–Ω –º–µ—Ö–æ“≥–µ–¥?\n–ú–∞—Å–∞–ª–∞–Ω: USD, RUB, KGS", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_TO.value)
        elif language == 'Russian':
            bot.send_message(message.chat.id, "–ù–∞ –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å?\n–ù–∞–ø—Ä–∏–º–µ—Ä: USD, RUB, KGS", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_TO.value)
        else:
            bot.send_message(message.chat.id, "To what currency do you want to change?\nFor example: USD, RUB, KGS", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_TO.value)
    else:
        if language == 'Tajik':
            bot.send_message(message.chat.id, "–õ—É—Ç—Ñ–∞–Ω –∞—Å—ä–æ—Ä–∏ –¥—É—Ä—É—Å—Ç—Ä–æ –≤–æ—Ä–∏–¥ –∫—É–Ω–µ–¥!", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_FROM.value)
        elif language == 'Russian':
            bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –≤–∞–ª—é—Ç—É!", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_FROM.value)
        else:
            bot.send_message(message.chat.id, "Please enter the correct currency!", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_FROM.value)

@bot.message_handler(content_types=['text'], func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.CURRENCY_TO.value)
def get_currency_to(message):
    global currency_to, language
    if message.text.upper() in ex['NAMES_OTHER']:
        currency_to = message.text.upper()
        if language == 'Tajik':
            bot.send_message(message.chat.id, f"–®—É–º–æ —á–∞–Ω–¥ {currency_from} –º–µ—Ö–æ“≥–µ–¥ –∏–≤–∞–∑ –∫—É–Ω–µ–¥?", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_AMOUNT.value)
        elif language == 'Russian':
            bot.send_message(message.chat.id, f"–°–∫–æ–ª—å–∫–æ {currency_from} –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å?", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_AMOUNT.value)
        else:
            bot.send_message(message.chat.id, f"How many {currency_from} do you want to change?", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_AMOUNT.value)
    else:
        if language == 'Tajik':
            bot.send_message(message.chat.id, "–õ—É—Ç—Ñ–∞–Ω –∞—Å—ä–æ—Ä–∏ –¥—É—Ä—É—Å—Ç—Ä–æ –≤–æ—Ä–∏–¥ –∫—É–Ω–µ–¥!", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_TO.value)
        elif language == 'Russian':
            bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –≤–∞–ª—é—Ç—É!", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_TO.value)
        else:
            bot.send_message(message.chat.id, "Please enter the correct currency!", parse_mode="html")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_TO.value)

@bot.message_handler(content_types=['text'], func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.CURRENCY_AMOUNT.value)
def get_currency_amount(message):
    global amount, currency_from, currency_to, language
    if message.text.isnumeric():
        amount = float(message.text)
        i1 = ex['NAMES_OTHER'].index(currency_from)
        i2 = ex['NAMES_OTHER'].index(currency_to)
        val = amount * (float(ex['UNIT'][i2]) / float(ex['RATE'][i2])) / (float(ex['UNIT'][i1]) / float(ex['RATE'][i1]))
        
        if language == 'Tajik':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–ö”Ø–º–∞–∫ –±–æ “õ–∞—Ä–∑")
            item2 = types.KeyboardButton("–ú—É–±–æ–¥–∏–ª–∞–∏ –∞—Å—ä–æ—Ä")
            item3 = types.KeyboardButton("–ë–æ–∑–≥–∞—à—Ç")
            markup.add(item1)
            markup.add(item2)
            markup.add(item3)

            bot.send_message(message.chat.id, f"–ë–æ {amount}{currency_from} —à—É–º–æ {round(val, 2)}{currency_to} –º–µ–≥–∏—Ä–µ–¥", parse_mode="html", reply_markup=markup)
            dbworker.set_state(message.chat.id, config.States.ACTION.value)
        elif language == 'Russian':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–ü–æ–º–æ—â—å —Å –∫—Ä–µ–¥–∏—Ç–æ–º")
            item2 = types.KeyboardButton("–ö—É—Ä—Å –≤–∞–ª—é—Ç")
            item3 = types.KeyboardButton("–ù–∞–∑–∞–¥")
            markup.add(item1)
            markup.add(item2)
            markup.add(item3)

            bot.send_message(message.chat.id, f"–ó–∞ {amount}{currency_from} –≤—ã –ø–æ–ª—É—á–∏—Ç–µ {round(val, 2)}{currency_to}", parse_mode="html", reply_markup=markup)
            dbworker.set_state(message.chat.id, config.States.ACTION.value)
        else:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("Help with a loan")
            item2 = types.KeyboardButton("Exchange Rates")
            item3 = types.KeyboardButton("Back")
            markup.add(item1)
            markup.add(item2)
            markup.add(item3)

            bot.send_message(message.chat.id, f"For {amount}{currency_from} you will get {round(val, 2)}{currency_to}", parse_mode="html", reply_markup=markup)
            dbworker.set_state(message.chat.id, config.States.ACTION.value)
        
    else:
        if language == 'Tajik':
            bot.send_message(message.chat.id, "–õ—É—Ç—Ñ–∞–Ω —Ä–∞“õ–∞–º –≤–æ—Ä–∏–¥ –∫—É–Ω–µ–¥!")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_AMOUNT.value)
        elif language == 'Russian':
            bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—ã!")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_AMOUNT.value)
        else:
            bot.send_message(message.chat.id, "Please enter numbers!")
            dbworker.set_state(message.chat.id, config.States.CURRENCY_AMOUNT.value)

@bot.message_handler(content_types=['text'], func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.LOAN_PURPOSE.value)
def get_loan_amount(message):
    global purpose
    if language == 'Tajik':
        if message.text == "“ö–∞—Ä–∑–∏ –∏—Å—Ç–µ—ä–º–æ–ª”£" or message.text == "“ö–∞—Ä–∑–∏ –º–æ—à–∏–Ω":
            if message.text == "“ö–∞—Ä–∑–∏ –∏—Å—Ç–µ—ä–º–æ–ª”£":
                loan_user.append('consumer loan')
            else:
                loan_user.append('car loan')
            bot.send_message(message.chat.id, "–®—É–º–æ —á”£ “õ–∞–¥–∞—Ä “õ–∞—Ä–∑ –≥–∏—Ä–∏—Ñ—Ç–∞–Ω –º–µ—Ö–æ“≥–µ–¥?")
            dbworker.set_state(message.chat.id, config.States.LOAN_AMOUNT.value)
        else:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("“ö–∞—Ä–∑–∏ –∏—Å—Ç–µ—ä–º–æ–ª”£")
            item2 = types.KeyboardButton("“ö–∞—Ä–∑–∏ –º–æ—à–∏–Ω")
            markup.add(item1)
            markup.add(item2)
            bot.send_message(message.chat.id, "–ë–æ –∫–∞–¥–æ–º –º–∞“õ—Å–∞–¥ —à—É–º–æ –º–µ—Ö–æ“≥–µ–¥ “õ–∞—Ä–∑ –≥–∏—Ä–µ–¥?", parse_mode="html", reply_markup=markup)
            dbworker.set_state(message.chat.id, config.States.LOAN_PURPOSE.value)
    elif language == 'Russian':
        if message.text == '–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏–π –∫—Ä–µ–¥–∏—Ç' or message.text == '–ê–≤—Ç–æ–∫—Ä–µ–¥–∏—Ç':
            if message.text == "–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏–π –∫—Ä–µ–¥–∏—Ç":
                loan_user.append('consumer loan')
            else:
                loan_user.append('car loan')
            bot.send_message(message.chat.id, "–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∑—è—Ç—å –≤ –∫—Ä–µ–¥–∏—Ç?")
            dbworker.set_state(message.chat.id, config.States.LOAN_AMOUNT.value)
        else:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏–π –∫—Ä–µ–¥–∏—Ç")
            item2 = types.KeyboardButton("–ê–≤—Ç–æ–∫—Ä–µ–¥–∏—Ç")
            markup.add(item1)
            markup.add(item2)
            bot.send_message(message.chat.id, "C –∫–∞–∫–æ–π —Ü–µ–ª—å—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∑—è—Ç—å –≤ –∫—Ä–µ–¥–∏—Ç?", parse_mode="html", reply_markup=markup)
            dbworker.set_state(message.chat.id, config.States.LOAN_PURPOSE.value)
    else:
        if message.text == 'Consumer Loan' or message.text == 'Car Loan':
            if message.text == "Consumer Loan":
                loan_user.append('consumer loan')
            else:
                loan_user.append('car loan')
            bot.send_message(message.chat.id, "How much do you want to borrow?")
            dbworker.set_state(message.chat.id, config.States.LOAN_AMOUNT.value)
        else:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("Consumer Loan")
            item2 = types.KeyboardButton("Car Loan")
            markup.add(item1)
            markup.add(item2)
            bot.send_message(message.chat.id, "For what purpose do you want to get loan?", parse_mode="html", reply_markup=markup)
            dbworker.set_state(message.chat.id, config.States.LOAN_PURPOSE.value)




@bot.message_handler(content_types=['text'], func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.LOAN_AMOUNT.value)
def get_loan_amount(message):
    if message.text.isnumeric():
        loan_user.append(int(message.text))
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('TJS')
        item2 = types.KeyboardButton('USD')
        markup.add(item1)
        markup.add(item2)
        if language == 'Tajik':
            bot.send_message(message.chat.id, "–®—É–º–æ –±–æ –∫–∞–¥–æ–º –∞—Å—ä–æ—Ä “õ–∞—Ä–∑ –≥–∏—Ä–∏—Ñ—Ç–∞–Ω –º–µ—Ö–æ“≥–µ–¥?", reply_markup=markup)
            dbworker.set_state(message.chat.id, config.States.LOAN_CURRENCY.value)

        elif language == 'Russian':
            bot.send_message(message.chat.id, "–í –∫–∞–∫–æ–π –≤–∞–ª—é—Ç–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∑—è—Ç—å –∫—Ä–µ–¥–∏—Ç?", reply_markup=markup)
            dbworker.set_state(message.chat.id, config.States.LOAN_CURRENCY.value)

        else:
            bot.send_message(message.chat.id, "In what currency do you want to take a loan?", reply_markup=markup)
            dbworker.set_state(message.chat.id, config.States.LOAN_CURRENCY.value)

    else:
        if language == 'Tajik':
            bot.send_message(message.chat.id, "–õ—É—Ç—Ñ–∞–Ω —Ä–∞“õ–∞–º –≤–æ—Ä–∏–¥ –∫—É–Ω–µ–¥!")
            dbworker.set_state(message.chat.id, config.States.LOAN_AMOUNT.value)
        elif language == 'Russian':
            bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—ã!")
            dbworker.set_state(message.chat.id, config.States.LOAN_AMOUNT.value)
        else:
            bot.send_message(message.chat.id, "Please enter numbers!")
            dbworker.set_state(message.chat.id, config.States.LOAN_AMOUNT.value)


@bot.message_handler(content_types=['text'], func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.LOAN_CURRENCY.value)
def get_loan_currency(message):
    if message.text == "TJS" or message.text == "USD":
        loan_user.append(message.text.lower())
        if language == 'Tajik':
            bot.send_message(message.chat.id, "–®—É–º–æ –±–∞ –∫–∞–¥–æ–º –ú”Ø“≥–ª–∞—Ç “õ–∞—Ä–∑ –≥–∏—Ä–∏—Ñ—Ç–∞–Ω –º–µ—Ö–æ“≥–µ–¥?\n(–õ—É—Ç—Ñ–∞–Ω, –¥–∞–≤—Ä–∞—Ä–æ –±–æ –º–æ“≥“≥–æ –≤–æ—Ä–∏–¥ –∫—É–Ω–µ–¥)")
            dbworker.set_state(message.chat.id, config.States.LOAN_DURATION.value)
        elif language == 'Russian':
            bot.send_message(message.chat.id, "–ù–∞ –∫–∞–∫–æ–π —Å—Ä–æ–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∑—è—Ç—å –∫—Ä–µ–¥–∏—Ç?\n(–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —Å—Ä–æ–∫ –≤ –º–µ—Å—è—Ü–∞—Ö)")
            dbworker.set_state(message.chat.id, config.States.LOAN_DURATION.value)
        else:
            bot.send_message(message.chat.id, "For how long do you want to take out a loan?\n(Please enter the period in months)")
            dbworker.set_state(message.chat.id, config.States.LOAN_DURATION.value)
    else:
        if language == 'Tajik':
            bot.send_message(message.chat.id, "–õ—É—Ç—Ñ–∞–Ω —è–∫–µ –∞–∑ –≤–∞—Ä–∏–∞–Ω—Ç“≥–æ—Ä–æ –∏–Ω—Ç–∏—Ö–æ–± –∫—É–Ω–µ–¥!")
            dbworker.set_state(message.chat.id, config.States.LOAN_CURRENCY.value)
        elif language == 'Russian':
            bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤!")
            dbworker.set_state(message.chat.id, config.States.LOAN_CURRENCY.value)
        else:
            bot.send_message(message.chat.id, "Please select one of the options!")
            dbworker.set_state(message.chat.id, config.States.LOAN_CURRENCY.value)

@bot.message_handler(content_types=['text'], func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.LOAN_DURATION.value)
def get_loan_currency(message):
    global loan_user
    if message.text.isnumeric():
        loan_user.append(int(message.text))
        exp_image(loan_user, language)
        print(f'{message.from_user.first_name} - image exported; {str(loan_user)}')
        if len(check(loan_user, language)) > 0:
            if language == 'Tajik':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = types.KeyboardButton("–ö”Ø–º–∞–∫ –±–æ “õ–∞—Ä–∑")
                item2 = types.KeyboardButton("–ú—É–±–æ–¥–∏–ª–∞–∏ –∞—Å—ä–æ—Ä")
                item3 = types.KeyboardButton("–ë–æ–∑–≥–∞—à—Ç")
                markup.add(item1)
                markup.add(item2)
                markup.add(item3)
                bot.send_message(message.chat.id, "–ù–∞—Ç–∏“∑–∞“≥–æ–∏ –±–∞—Ä–æ–∏ —Ç–∞–ª–∞–±–æ—Ç–∏ —à—É–º–æ:", reply_markup=markup)
                bot.send_photo(message.chat.id, open('result.png', 'rb'))
                bot.send_message(message.chat.id, check(loan_user, language)['Bank id'].values[0] + ' —Ñ–æ–∏–∑–∏ –ø–∞—Å—Ç—Ç–∞—Ä–∏–Ω—Ä–æ –±–∞—Ä–æ–∏ “õ–∞—Ä–∑–µ, –∫–∏ —à—É–º–æ “∑—É—Å—Ç—É“∑”Ø –º–µ–∫–∞—Ä–¥–µ–¥, –ø–µ—à–Ω–∏“≥–æ–¥ –º–µ–∫—É–Ω–∞–¥! –ü–π–≤–∞–Ω–¥–∞ –±–∞ —Å–∞–π—Ç –±–æ–Ω–∫:')
                bot.send_message(message.chat.id, websites[banks_tj.index(check(loan_user, language)['Bank id'].values[0])])
                dbworker.set_state(message.chat.id, config.States.ACTION.value)
            elif language == 'Russian':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = types.KeyboardButton("–ü–æ–º–æ—â—å —Å –∫—Ä–µ–¥–∏—Ç–æ–º")
                item2 = types.KeyboardButton("–ö—É—Ä—Å –≤–∞–ª—é—Ç")
                item3 = types.KeyboardButton("–ù–∞–∑–∞–¥")
                markup.add(item1)
                markup.add(item2)
                markup.add(item3)

                bot.send_message(message.chat.id, "–í–æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É:", reply_markup=markup)
                bot.send_photo(message.chat.id, open('result.png', 'rb'))
                bot.send_message(message.chat.id, check(loan_user, language)['Bank id'].values[0] + ' –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Å–∞–º—ã–µ –Ω–∏–∑–∫–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–µ —Å—Ç–∞–≤–∫–∏ –ø–æ –∫—Ä–µ–¥–∏—Ç—É, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –∏—Å–∫–∞–ª–∏! –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç –±–∞–Ω–∫–∞:')
                bot.send_message(message.chat.id, websites[banks_ru.index(check(loan_user, language)['Bank id'].values[0])])
                dbworker.set_state(message.chat.id, config.States.ACTION.value)
            else:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = types.KeyboardButton("Help with a loan")
                item2 = types.KeyboardButton("Exchange Rates")
                item3 = types.KeyboardButton("Back")
                markup.add(item1)
                markup.add(item2)
                markup.add(item3)


                bot.send_message(message.chat.id, "Here are the results for your query:", reply_markup=markup)
                bot.send_photo(message.chat.id, open('result.png', 'rb'))
                bot.send_message(message.chat.id, check(loan_user, language)['Bank id'].values[0] + ' offers lowest interest rates for the loan that your were searching! Link to bank website:')
                bot.send_message(message.chat.id, websites[banks_en.index(check(loan_user, language)['Bank id'].values[0])])
                dbworker.set_state(message.chat.id, config.States.ACTION.value)
            
            loan_user = []

        else:
            if language == 'Tajik':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = types.KeyboardButton("–ö”Ø–º–∞–∫ –±–æ “õ–∞—Ä–∑")
                item2 = types.KeyboardButton("–ú—É–±–æ–¥–∏–ª–∞–∏ –∞—Å—ä–æ—Ä")
                item3 = types.KeyboardButton("–ë–æ–∑–≥–∞—à—Ç")
                markup.add(item1)
                markup.add(item2)
                markup.add(item3)

                if loan_user[0] == 'consumer loan':
                    if loan_user[2] == 'tjs':
                        if loan_user[3]>48:
                            bot.send_message(message.chat.id, "–ë–æ–Ω–∫“≥–æ –±–∞—Ä–æ–∏ –∏–Ω –º—É–¥–¥–∞—Ç “õ–∞—Ä–∑ –Ω–∞–º–µ–¥–∏“≥–∞–Ω–¥")
                        elif loan_user[1]>15000:
                            bot.send_message(message.chat.id, "–ë–æ–Ω–∫“≥–æ –±–∞—Ä–æ–∏ –∏–Ω –º–∞–±–ª–∞“ì “õ–∞—Ä–∑ –Ω–∞–º–µ–¥–∏“≥–∞–Ω–¥")
                    else:
                        if loan_user[3]>48:
                            bot.send_message(message.chat.id, "–ë–æ–Ω–∫“≥–æ –±–∞—Ä–æ–∏ –∏–Ω –º—É–¥–¥–∞—Ç “õ–∞—Ä–∑ –Ω–∞–º–µ–¥–∏“≥–∞–Ω–¥")
                        elif loan_user[1]>1500:
                            bot.send_message(message.chat.id, "–ë–æ–Ω–∫“≥–æ –±–∞—Ä–æ–∏ –∏–Ω –º–∞–±–ª–∞“ì “õ–∞—Ä–∑ –Ω–∞–º–µ–¥–∏“≥–∞–Ω–¥")
                else:
                    if loan_user[2] == 'tjs':
                        if loan_user[3]>60:
                            bot.send_message(message.chat.id, "–ë–æ–Ω–∫“≥–æ –±–∞—Ä–æ–∏ –∏–Ω –º—É–¥–¥–∞—Ç “õ–∞—Ä–∑ –Ω–∞–º–µ–¥–∏“≥–∞–Ω–¥")
                        elif loan_user[1]>250000:
                            bot.send_message(message.chat.id, "–ë–æ–Ω–∫“≥–æ –±–∞—Ä–æ–∏ –∏–Ω –º–∞–±–ª–∞“ì “õ–∞—Ä–∑ –Ω–∞–º–µ–¥–∏“≥–∞–Ω–¥")
                    else:
                        if loan_user[3]>60:
                            bot.send_message(message.chat.id, "–ë–æ–Ω–∫“≥–æ –±–∞—Ä–æ–∏ –∏–Ω –º—É–¥–¥–∞—Ç “õ–∞—Ä–∑ –Ω–∞–º–µ–¥–∏“≥–∞–Ω–¥")
                        elif loan_user[1]>25000:
                            bot.send_message(message.chat.id, "–ë–æ–Ω–∫“≥–æ –±–∞—Ä–æ–∏ –∏–Ω –º–∞–±–ª–∞“ì “õ–∞—Ä–∑ –Ω–∞–º–µ–¥–∏“≥–∞–Ω–¥")

                bot.send_message(message.chat.id, "–õ—É—Ç—Ñ–∞–Ω –±–æ–∑ —Å–∞—Ä –∫—É–Ω–µ–¥", reply_markup=markup)
                dbworker.set_state(message.chat.id, config.States.ACTION.value)

            elif language == 'Russian':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = types.KeyboardButton("–ü–æ–º–æ—â—å —Å –∫—Ä–µ–¥–∏—Ç–æ–º")
                item2 = types.KeyboardButton("–ö—É—Ä—Å –≤–∞–ª—é—Ç")
                item3 = types.KeyboardButton("–ù–∞–∑–∞–¥")
                markup.add(item1)
                markup.add(item2)
                markup.add(item3)

                if loan_user[0] == 'consumer loan':
                    if loan_user[2] == 'tjs':
                        if loan_user[3]>48:
                            bot.send_message(message.chat.id, "–ë–∞–Ω–∫–∏ –Ω–µ –≤—ã–¥–∞—é—Ç –∫—Ä–µ–¥–∏—Ç—ã –Ω–∞ —Ç–∞–∫–æ–π —Å—Ä–æ–∫")
                        elif loan_user[1]>15000:
                            bot.send_message(message.chat.id, "–ë–∞–Ω–∫–∏ –Ω–µ –≤—ã–¥–∞—é—Ç –∫—Ä–µ–¥–∏—Ç—ã –Ω–∞ —Ç–∞–∫—É—é —Å—É–º–º—É")
                    else:
                        if loan_user[3]>48:
                            bot.send_message(message.chat.id, "–ë–∞–Ω–∫–∏ –Ω–µ –≤—ã–¥–∞—é—Ç –∫—Ä–µ–¥–∏—Ç—ã –Ω–∞ —Ç–∞–∫–æ–π —Å—Ä–æ–∫")
                        elif loan_user[1]>1500:
                            bot.send_message(message.chat.id, "–ë–∞–Ω–∫–∏ –Ω–µ –≤—ã–¥–∞—é—Ç –∫—Ä–µ–¥–∏—Ç—ã –Ω–∞ —Ç–∞–∫—É—é —Å—É–º–º—É")
                else:
                    if loan_user[2] == 'tjs':
                        if loan_user[3]>60:
                            bot.send_message(message.chat.id, "–ë–∞–Ω–∫–∏ –Ω–µ –≤—ã–¥–∞—é—Ç –∫—Ä–µ–¥–∏—Ç—ã –Ω–∞ —Ç–∞–∫–æ–π —Å—Ä–æ–∫")
                        elif loan_user[1]>250000:
                            bot.send_message(message.chat.id, "–ë–∞–Ω–∫–∏ –Ω–µ –≤—ã–¥–∞—é—Ç –∫—Ä–µ–¥–∏—Ç—ã –Ω–∞ —Ç–∞–∫—É—é —Å—É–º–º—É")
                    else:
                        if loan_user[3]>60:
                            bot.send_message(message.chat.id, "–ë–∞–Ω–∫–∏ –Ω–µ –≤—ã–¥–∞—é—Ç –∫—Ä–µ–¥–∏—Ç—ã –Ω–∞ —Ç–∞–∫–æ–π —Å—Ä–æ–∫")
                        elif loan_user[1]>25000:
                            bot.send_message(message.chat.id, "–ë–∞–Ω–∫–∏ –Ω–µ –≤—ã–¥–∞—é—Ç –∫—Ä–µ–¥–∏—Ç—ã –Ω–∞ —Ç–∞–∫—É—é —Å—É–º–º—É")

                bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞—á–Ω–∏—Ç–µ –µ—â–µ —Ä–∞–∑", reply_markup=markup)
                dbworker.set_state(message.chat.id, config.States.ACTION.value)

            else:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = types.KeyboardButton("Help with a loan")
                item2 = types.KeyboardButton("Exchange Rates")
                item3 = types.KeyboardButton("Back")
                markup.add(item1)
                markup.add(item2)
                markup.add(item3)

                if loan_user[0] == 'consumer loan':
                    if loan_user[2] == 'tjs':
                        if loan_user[3]>48:
                            bot.send_message(message.chat.id, "Banks don't lend for that duration")
                        elif loan_user[1]>15000:
                            bot.send_message(message.chat.id, "Banks don't lend for that amount")
                    else:
                        if loan_user[3]>48:
                            bot.send_message(message.chat.id, "Banks don't lend for that duration")
                        elif loan_user[1]>1500:
                            bot.send_message(message.chat.id, "Banks don't lend for that amount")
                else:
                    if loan_user[2] == 'tjs':
                        if loan_user[3]>60:
                            bot.send_message(message.chat.id, "Banks don't lend for that duration")
                        elif loan_user[1]>250000:
                            bot.send_message(message.chat.id, "Banks don't lend for that amount")
                    else:
                        if loan_user[3]>60:
                            bot.send_message(message.chat.id, "Banks don't lend for that duration")
                        elif loan_user[1]>25000:
                            bot.send_message(message.chat.id, "Banks don't lend for that amount")
                            
                bot.send_message(message.chat.id, "Please start again", reply_markup=markup)
                dbworker.set_state(message.chat.id, config.States.ACTION.value)
            loan_user = []

    else:
        if language == 'Tajik':
            bot.send_message(message.chat.id, "–õ—É—Ç—Ñ–∞–Ω —Ä–∞“õ–∞–º –≤–æ—Ä–∏–¥ –∫—É–Ω–µ–¥!")
            dbworker.set_state(message.chat.id, config.States.LOAN_DURATION.value)
        elif language == 'Russian':
            bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—ã!")
            dbworker.set_state(message.chat.id, config.States.LOAN_DURATION.value)
        else:
            bot.send_message(message.chat.id, "Please enter numbers!")
            dbworker.set_state(message.chat.id, config.States.LOAN_DURATION.value)


bot.polling(none_stop=True, interval=0)